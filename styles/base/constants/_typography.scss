@use "sass:list";
@use "sass:map";
@use "sass:math";
@use "sass:meta";
@use "../functions" as *;

$desktop: 16px;
$body-ratio: 1.5;
$heading-ratio: 1.2;
$mobile: 14px;

@function get-modular-scale($scale, $base: $desktop) {
    $ratio: $heading-ratio;

    @if $scale <= 0 {
        $ratio: $body-ratio;
    }

    @return ms($scale, $base, $ratio);
}

@function ms($value, $ms-base: $desktop, $ms-ratio: $ratio) {
    /* stylelint-disable-next-line scss/no-global-function-names */
    @return round(
        nearest,
        rems(calc($ms-base * pow($ms-ratio, $value))),
        0.001rem
    );
}

@function rems($values) {
    $result: ();
    $separator: list.separator($values);

    @each $value in $values {
        $value: $value;

        @if meta.type-of($value) == "number" {
            @if math.unit($value) == "px" {
                $value: math.div(strip-unit($value), strip-unit($desktop)) * 1rem;
            }
            @else if math.unit($value) != "rem" and $value != 0 {
                @warn "Cannot convert number `#{$value}` to rem units";
            }
        }
        @else if meta.type-of($value) == "list" {
            $value: rems($value);
        }
        @else {
            @warn "Cannot convert value `#{$value}` to rem units";
        }

        /* stylelint-disable-next-line scss/dollar-variable-first-in-block */
        $result: list.append($result, $value, $separator);
    }

    @return if(list.length($result) == 1, list.nth($result, 1), $result);
}

// https://www.modularscale.com/?16=&px=&1.5=

$scales: (
    "7": get-modular-scale(7),
    "6": get-modular-scale(6),
    "5": get-modular-scale(5),
    "4": get-modular-scale(4),
    "3": get-modular-scale(3),
    "2": get-modular-scale(2),
    "1": get-modular-scale(1),
    "0": rems($desktop),
    "-1": get-modular-scale(-1),
    "-2": get-modular-scale(-2),
);
$weights: (
    "bold": 700,
    "medium": 500,
    "normal": 400,
    "semi-bold": 600,
);
$h1: (
    lg: map.get($scales, "4"),
    ratio: $heading-ratio,
    selector: ".h1",
    sm: map.get($scales, "2"),
    weight: map.get($weights, "bold"),
);
$h2: (
    lg: map.get($scales, "3"),
    ratio: $heading-ratio,
    selector: ".h2",
    sm: map.get($scales, "1"),
    weight: map.get($weights, "bold"),
);
$h3: (
    lg: map.get($scales, "2"),
    ratio: $heading-ratio,
    selector: ".h3",
    sm: map.get($scales, "0"),
    weight: map.get($weights, "bold"),
);
$h4: (
    lg: map.get($scales, "1"),
    ratio: $heading-ratio,
    selector: ".h4",
    sm: map.get($scales, "-1"),
    weight: map.get($weights, "semi-bold"),
);
$body: (
    lg: map.get($scales, "0"),
    ratio: $body-ratio,
    selector: ".body",
    sm: map.get($scales, "-1"),
);
$label: (
    lg: map.get($scales, "0"),
    ratio: $body-ratio,
    selector: ".label",
    sm: map.get($scales, "-1"),
);
$fonts: (
    $h1,
    $h2,
    $h3,
    $h4,
    $body,
    $label,
);
$letter-spaced-elements: (
    "h1" "h2" "h3" "h4"
);
