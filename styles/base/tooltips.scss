@use "sass:map";
@use "./colors" as *;
@use "./constants" as *;
@use "./spacing" as *;
@use "./mixins" as *;
@use "./constants/typography" as *;

.tooltip {
    $block: &;
    $space-from-parent: get-modular-scale(0);

    @include flex($justify: center, $align: center);
    border-bottom: rems(1px) dashed map.get($base-color, "border");
    position: relative;

    &::after {
        border: rems(8px) solid map.get($base-color, "body");
        content: "";
        display: none;
        opacity: 0;
        position: absolute;
        transition: 0.3s opacity;
    }

    &.bottom::after {
        /* reset defaults */
        left: initial;
        margin: initial;
        right: initial;
        top: initial;
        bottom: -$space-from-parent;
        margin-top: $space-from-parent;
    }

    &.left::after {
        /* reset defaults */
        bottom: initial;
        margin: initial;
        right: initial;
        top: initial;
        left: -$space-from-parent;
        margin-right: $space-from-parent;
    }

    &.right::after {
        /* reset defaults */
        bottom: initial;
        left: initial;
        margin: initial;
        top: initial;
        right: -$space-from-parent;
        margin-left: $space-from-parent;
    }

    &.top::after {
        /* reset defaults */
        bottom: initial;
        left: initial;
        margin: initial;
        right: initial;
        top: initial;
        top: -$space-from-parent;
        margin-bottom: $space-from-parent;
    }

    &::before {
        border-radius: $border-radius;
        content: attr(data-tooltip);
        display: none;
        opacity: 0;
        padding: get-modular-scale(-2) get-modular-scale(-1);
        position: absolute;
        transition: 0.3s opacity;
        width: max-content;
        z-index: 4;
    }

    &:hover::before,
    &:hover::after {
        display: flex;
        opacity: 1;
    }

    &.bottom::before {
        /* reset defaults */
        bottom: initial;
        left: initial;
        margin: initial;
        right: initial;
        top: initial;
        top: 100%;
        margin-top: $space-from-parent;
    }

    &.left::before {
        /* reset defaults */
        bottom: initial;
        left: initial;
        margin: initial;
        top: initial;
        right: 100%;
        margin-right: $space-from-parent;
    }

    &.right::before {
        /* reset defaults */
        bottom: initial;
        margin: initial;
        right: initial;
        top: initial;
        left: 100%;
        margin-left: $space-from-parent;
    }

    &.top::before {
        /* reset defaults */
        left: initial;
        margin: initial;
        right: initial;
        top: initial;
        bottom: 100%;
        margin-bottom: $space-from-parent;
    }

    &--dark {

        &.bottom::after {
            border-color: transparent transparent map.get($base-color, "secondary") transparent;
        }

        &.left::after {
            border-color: transparent transparent transparent map.get($base-color, "secondary");
        }

        &.right::after {
            border-color: transparent map.get($base-color, "secondary") transparent transparent;
        }

        &.top::after {
            border-color: map.get($base-color, "secondary") transparent transparent transparent;
        }

        &::before {
            background-color: map.get($base-color, "secondary");
            color: map.get($base-color, "white");
        }
    }

    &--light {

        &.bottom::after {
            border-color: transparent transparent map.get($base-color-shades, "secondary", "200", "background") transparent;
        }

        &.left::after {
            border-color: transparent transparent transparent map.get($base-color-shades, "secondary", "200", "background");
        }

        &.right::after {
            border-color: transparent map.get($base-color-shades, "secondary", "200", "background") transparent transparent;
        }

        &.top::after {
            border-color: map.get($base-color-shades, "secondary", "200", "background") transparent transparent transparent;
        }

        &::before {
            background-color: map.get($base-color-shades, "secondary", "200", "background");
            color: map.get($base-color-shades, "secondary", "400", "background");
        }
    }
}
